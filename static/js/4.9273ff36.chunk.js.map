{"version":3,"sources":["Detail.js"],"names":["DivBox","styled","div","MainTitle","h4","props","Color","TabContent","useEffect","tabSwitchModify","pushTab","Stock","stock","connect","state","console","log","reducer","alertState","reducerAlert","useState","alert","alertModify","inputData","inputDataModify","useContext","stockContext","tabSwitch","pushTabModify","timer","setTimeout","clearTimeout","id","useParams","history","useHistory","productId","shoes","find","product","className","onChange","e","target","value","src","width","title","content","price","onClick","stockModify","dispatch","type","payload","name","quan","push","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"4NAUIA,EAASC,IAAOC,IAAV,iDAGNC,EAAYF,IAAOG,GAAV,oEAEE,SAAAC,GAAK,OAAIA,EAAMC,SAkF1B,SAASC,EAAYF,GAMjB,OAJAG,qBAAU,WACNH,EAAMI,iBAAgB,MAGJ,IAAlBJ,EAAMK,QACC,sFACiB,IAAlBL,EAAMK,QACL,sFACiB,IAAlBL,EAAMK,QACL,2FADJ,EAMb,SAASC,EAAMN,GACX,OACI,gDAASA,EAAMO,MAAM,MAehBC,uBATf,SAAmBC,GAEf,OADAC,QAAQC,IAAIF,GACL,CACHA,MAAQA,EAAMG,QACdC,WAAaJ,EAAMK,gBAKZN,EAhHf,SAAgBR,GAEZ,MAA2Be,oBAAS,GAApC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAAmCF,mBAAS,IAA5C,mBAAKG,EAAL,KAAgBC,EAAhB,KAEA,GADYC,qBAAWC,KACYN,oBAAS,IAA5C,mBAAKO,EAAL,KAAgBlB,EAAhB,KAEA,EAA+BW,mBAAS,GAAxC,mBAAKV,EAAL,KAAckB,EAAd,KAEApB,qBAAU,WACN,IAAIqB,EAAQC,YAAW,WAAQR,GAAY,KAAU,KACrD,OAAO,WAAQS,aAAaF,MAK7B,CAACR,IAGJ,IAAMW,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAY/B,EAAMgC,MAAMC,MAAM,SAASC,GACvC,OAAOA,EAAQP,IAAMA,KAGzB,OACE,sBAAKQ,UAAU,YAAf,UACI,cAACxC,EAAD,UACI,cAACG,EAAD,CAAWG,MAAO,OAAlB,sBAIFiB,EACF,uBAAOkB,SAAU,SAACC,GAAMlB,EAAgBkB,EAAEC,OAAOC,WAGrC,IAAVvB,EACI,qBAAKmB,UAAU,kBAAf,SACA,+HAEF,KAIN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,qBAAKK,IAAM,6CAA+CT,EAAUJ,GAAK,GAAK,OAAQc,MAAM,WAE9F,sBAAKN,UAAU,gBAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBJ,EAAUW,QAChC,4BAAIX,EAAUY,UACd,8BAAIZ,EAAUa,MAAd,aACA,cAACtC,EAAD,CAAOC,MAAOP,EAAMO,QACpB,wBAAQ4B,UAAU,iBAAiBU,QAAU,WACzC7C,EAAM8C,YAAY,CAAC,EAAE,GAAG,KACxB9C,EAAM+C,SAAS,CAACC,KAAO,UAAWC,QAAU,CAAEtB,GAAGI,EAAUJ,GAAIuB,KAAOnB,EAAUW,MAAOS,KAAK,KAC5FtB,EAAQuB,KAAK,UAHjB,sCAKA,wBAAQjB,UAAU,iBAAiBU,QAAU,WACzChB,EAAQuB,KAAK,MADjB,4CAKJ,eAAC,IAAD,CAAKjB,UAAU,OAAOkB,QAAQ,OAAOC,iBAAiB,SAAtD,UACI,cAAC,IAAIC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAMzC,GAAgB,GAAQmB,EAAc,IAAjF,sBAEJ,cAAC,IAAIgC,KAAL,UACI,cAAC,IAAIC,KAAL,CAAUC,SAAS,SAASZ,QAAS,WAAMzC,GAAgB,GAAQmB,EAAc,IAAjF,yBAGR,cAAC,IAAD,CAAemC,GAAIpC,EAAWqC,WAAW,MAAMC,QAAS,IAAxD,SACI,cAAC1D,EAAD,CAAYG,QAASA,EAASD,gBAAiBA","file":"static/js/4.9273ff36.chunk.js","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport './Detail.scss';\n\nimport {stockContext} from './App.js'\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from 'react-redux';\n\nlet DivBox = styled.div`\n    padding : 20px;\n`;\nlet MainTitle = styled.h4`\n    font-size : 25px;\n    color : ${ props => props.Color }\n`;\n\nfunction Detail(props) {\n\n    let [alert, alertModify] = useState(true);\n    let [inputData, inputDataModify] = useState('');\n    let stock = useContext(stockContext);\n    let [tabSwitch, tabSwitchModify] = useState(false);\n\n    let [pushTab, pushTabModify] = useState(0);\n\n    useEffect(() => {\n        let timer = setTimeout(() => { alertModify(false) }, 2000);\n        return () => { clearTimeout(timer) }\n        // return function name(params) {\n        //     //Detail이 사라질 때 실행됨 \n        //     // return () => {} 로 사용 가능\n        // } \n    }, [alert]); //alert라는 state가 변경이 될 때 훅 실행 , [] :  딱 한번 실행\n\n\n    let { id } = useParams();\n    let history = useHistory();\n    let productId = props.shoes.find( function(product) {\n        return product.id == id\n    });\n\n    return (\n      <div className=\"container\">\n          <DivBox>\n              <MainTitle Color={'grey'}>Detail</MainTitle>\n              {/* <MainTitle className=\"red\">Detail</MainTitle> */}\n          </DivBox>\n\n          { inputData }\n          <input onChange={(e)=>{ inputDataModify(e.target.value) }} />\n\n        {\n            alert === true \n            ? ( <div className=\"my-alert-yellow\">\n                <p>재고 임박! 서둘러서 주문 해 주세요!!</p>\n                </div> )\n            : null\n        }\n       \n\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <img src={ 'https://codingapple1.github.io/shop/shoes'+ ( productId.id + 1 ) +'.jpg'} width=\"100%\" />\n          </div>\n          <div className=\"col-md-6 mt-4\">\n            <h4 className=\"pt-5\">{productId.title}</h4>\n            <p>{productId.content}</p>\n            <p>{productId.price} 원</p>\n            <Stock stock={props.stock}></Stock>\n            <button className=\"btn btn-danger\" onClick={ ()=>{\n                props.stockModify([9,11,12]);\n                props.dispatch({type : 'addList', payload : { id:productId.id, name : productId.title, quan:1}});\n                history.push('/cart');\n            } }>주문하기</button> \n            <button className=\"btn btn-danger\" onClick={ ()=>{\n                history.push('/'); } }>뒤로가기</button> \n          </div>\n        </div>\n\n        <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\n            <Nav.Item>\n                <Nav.Link eventKey=\"link-0\" onClick={()=>{ tabSwitchModify(false); pushTabModify(0) }}>Active</Nav.Link>\n            </Nav.Item>\n            <Nav.Item>\n                <Nav.Link eventKey=\"link-1\" onClick={()=>{ tabSwitchModify(false); pushTabModify(1)}}>Option</Nav.Link>\n            </Nav.Item>\n        </Nav>\n        <CSSTransition in={tabSwitch} classNames=\"wow\" timeout={500}>\n            <TabContent pushTab={pushTab} tabSwitchModify={tabSwitchModify} />\n        </CSSTransition>\n\n      </div>    \n    )\n}\n\n    function TabContent (props) {\n\n        useEffect(()=>{\n            props.tabSwitchModify(true);\n        });\n\n        if (props.pushTab === 0) {\n            return <div>첫 번째 내용입니다.</div>\n        } else if(props.pushTab === 1) {\n            return <div>두 번째 내용입니다.</div>\n        } else if(props.pushTab === 2) {\n            return <div>세 번째 내용입니다.</div>\n        }\n        \n    }\n\n  function Stock(props) {\n      return(\n          <p>재고 : {props.stock[0]}</p>\n      )\n  }\n\n\n\nfunction dataInfor(state) {\n    console.log(state);\n    return {\n        state : state.reducer,\n        alertState : state.reducerAlert\n\n    }\n}\n\nexport default connect(dataInfor)(Detail);\n//   export default Detail;"],"sourceRoot":""}